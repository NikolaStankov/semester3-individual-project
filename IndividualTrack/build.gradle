plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
    id "org.flywaydb.flyway" version "8.5.10"
    id 'com.palantir.docker' version '0.33.0'
    id 'jacoco'
}

sonarqube {
    properties {
        property "sonar.projectKey", "NBAPortalApp"
        property "sonar.qualitygate.wait", true
        property "sonar.coverage.jacoco.xmlReportPath", "${project.buildDir}/build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "**/fontys/sem3/individual_track/business/configuration/security/**",
        "**/fontys/sem3/individual_track/annotation/**"
    }
}

group = 'fontys.sem3'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

flyway {
    url = 'jdbc:h2:mem:mydb'
    user = 'myUsr'
    password = 'mySecretPwd'
    schemas = ['schema1', 'schema2', 'schema3']
    placeholders = [
            'keyABC'          : 'valueXYZ',
            'otherplaceholder': 'value123'
    ]
}

repositories {
    mavenCentral()
}

docker {
    name "nbaportalbackend"
    copySpec.from(jar).rename(".*", "app.jar")
    buildArgs(['JAR_FILE': "app.jar"])
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.github.privettoli:vertx-json-value-mapper:0.0.1'
    implementation 'com.yashoid:jsonparsable:1.0.4'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.json:json:20220320'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.auth0:java-jwt:3.11.0'
    implementation 'org.flywaydb:flyway-core:8.5.5'
    implementation 'org.flywaydb:flyway-mysql:8.5.5'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.0.1'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation('org.springframework.boot:spring-boot-starter-websocket')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
